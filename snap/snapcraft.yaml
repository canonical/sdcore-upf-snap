name: sdcore-upf
base: core20
version: '1.3'
summary: SD-Core UPF
description: SD-Core User Plane Function (UPF)

grade: stable
confinement: devmode

apps:
  bessd:
    daemon: simple
    install-mode: disable
    command: bin/bessd-start
    plugs:
      - network-bind
      - network-control
  routectl:
    daemon: simple
    install-mode: disable
    command: bin/routectl-start
    plugs:
      - network-bind
  pfcpiface:
    daemon: simple
    install-mode: disable
    command: bin/pfcpiface-start
    plugs:
      - network-bind
  bessctl:
    command: opt/bess/bessctl/bessctl
    environment:
      CONF_FILE: /var/snap/sdcore-upf/common/upf.json

parts:
  xdp:
    plugin: autotools
    source: https://github.com/xdp-project/xdp-tools.git
    source-tag: v1.2.2
    build-packages:
      - clang
      - gcc-multilib
      - libelf-dev
      - libpcap-dev
      - linux-headers-5.4.0-26
      - llvm
    prime:
      - usr/local/lib/x86_64-linux-gnu/*.so
      - usr/lib/libxdp*

  cndp:
    after:
      - xdp
    plugin: meson
    source: https://github.com/CloudNativeDataPlane/cndp.git
    source-commit: d5ce4b9edc2e7ddb46a61b395deffafaf11a0500
    build-packages:
      - clang
      - golang
      - libbpf-dev
      - libbsd-dev
      - libnl-3-dev
      - libnl-cli-3-dev
      - libnuma-dev
      - lld
    meson-parameters:
      - -Dbuildtype=release
      - -Dmachine=haswell
      - -Ddefault_library=static
    override-build: |
      snapcraftctl build
    prime:
      - usr/local/lib/x86_64-linux-gnu/*.so
      - usr/local/bin/cndpfwd

  dpdk:
    plugin: meson
    after:
      - cndp
    source: https://fast.dpdk.org/rel/dpdk-22.11.4.tar.gz
    source-type: tar
    build-packages:
      - ca-certificates
      - libbenchmark-dev
      - libbpf0
      - libc-ares-dev
      - libelf-dev
      - libgflags2.2
      - libgoogle-glog-dev
      - libgrpc++-dev
      - libgtest-dev
      - libjson-c-dev
      - libnuma-dev
      - libpcap-dev
      - libprotobuf-dev
      - libunwind-dev
      - meson
      - protobuf-compiler
      - protobuf-compiler-grpc
      - python3
      - python3-pyelftools
    meson-parameters:
      - --buildtype=release
      - -Denable_driver_sdk=true
      - -Dmachine=haswell
    override-pull: |
      snapcraftctl pull
      for file in ${SNAPCRAFT_PROJECT_DIR}/local/patches/dpdk/*
      do
        patch -i $file -p 1
      done
    prime:
      - usr/local/lib/x86_64-linux-gnu/*.so

  bess:
    plugin: nil
    after:
      - dpdk
    source: https://github.com/omec-project/bess.git
    source-commit: dc7ef58702b3013a0b149b113340082dfbdca7cd
    source-type: git
    build-packages:
      - ca-certificates
      - libbenchmark-dev
      - libbpf0
      - libc-ares-dev
      - libelf-dev
      - libgflags2.2
      - libgoogle-glog-dev
      - libgrpc++-dev
      - libgtest-dev
      - libjson-c-dev
      - libnuma-dev
      - libpcap-dev
      - libprotobuf-dev
      - libssl-dev
      - libunwind-dev
      - meson
      - pkg-config
      - protobuf-compiler
      - protobuf-compiler-grpc
      - python3
    stage-packages:
      - libbpf0
      - libgflags2.2
      - libjson-c4
      - libgraph-easy-perl
      - iproute2
      - iptables
      - iputils-ping
      - tcpdump
      - ethtool
    override-build: |
      for file in $(find ./protobuf -name *.proto -print)
      do
        protoc "$file" --proto_path=protobuf --python_out=pybess/builtin_pb --grpc_out=pybess/builtin_pb --plugin=protoc-gen-grpc=$(which grpc_python_plugin)
      done
      make -j $(nproc) -C core bessd modules
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cp bin/bessd $SNAPCRAFT_PART_INSTALL/bin/bessd
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/bess/bessctl
      mkdir -p $SNAPCRAFT_PART_INSTALL/opt/bess/pybess
      cp -r bessctl/* $SNAPCRAFT_PART_INSTALL/opt/bess/bessctl/
      cp -r pybess/* $SNAPCRAFT_PART_INSTALL/opt/bess/pybess/

  bess-python-deps:
    plugin: python
    after:
      - bess
    source: .
    python-packages:
      - flask
      - grpcio
      - iptools
      - jsoncomment
      - mitogen
      - protobuf==3.20.0
      - psutil
      - pyroute2
      - scapy
    stage-packages:
      - python3-venv
    override-build: |
      snapcraftctl build
      ln -srf $SNAPCRAFT_PART_INSTALL/bin/python3 $SNAPCRAFT_PART_INSTALL/bin/python

  config:
    plugin: dump
    after:
      - bess
    source: https://github.com/omec-project/upf.git
    source-commit: e52a4f2a6ba53467aa9e13a36a473d680bd5c61a
    source-subdir: conf
    stage-packages:
      - jq
    organize:
      "*": opt/bess/bessctl/conf/
    override-build: |
      for file in ${SNAPCRAFT_PROJECT_DIR}/local/patches/bessctl/*
      do
        patch -i $file -p 1
      done
      snapcraftctl build

  service-files:
    plugin: dump
    source: service

  pfcpiface:
    plugin: go
    source: https://github.com/omec-project/upf.git
    source-commit: 57860858a17088d06c6bc0def9fcd6e6697a1e98
    build-snaps:
      - go
    prime:
      - -bin/p4info_code_gen
